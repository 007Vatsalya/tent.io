{
  "schemas": {
    "data": {
      "title": "Post Data",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "pages": {
          "description": "Links to other pages. Each link contains a relative reference starting with `?` and followed by zero or more query parameters.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "first": {
              "description": "Link to the first page. Omitted if the current page is the first page.",
              "type": "string",
              "format": "https://tent.io/formats/page-uri"
            },
            "prev": {
              "description": "Link to the previous page. Omitted if the current page is the first page.",
              "type": "string",
              "format": "https://tent.io/formats/page-uri"
            },
            "next": {
              "description": "Link to the next page. Omitted if the current page is the last page.",
              "type": "string",
              "format": "https://tent.io/formats/page-uri"
            },
            "last": {
              "description": "Link to the last page. Omitted if the current page is the last page.",
              "type": "string",
              "format": "https://tent.io/formats/page-uri"
            }
          }
        },
        "posts": {
          "description": "A list of posts.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "mentions": {
          "description": "A list of mentions.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "versions": {
          "description": "A list of versions.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "post": {
          "description": "A single post.",
          "type": "object"
        },
        "refs": {
          "description": "An array of referenced posts for each post in the posts array.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "profiles": {
          "description": "Profile details for each publishing entity and/or mentioned entity in the `posts`, `mentions`, and `refs` arrays.",
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            ".+": {
              "name": {
                "description": "The entity's name or pseudonym.",
                "type": "string",
                "maxLength": 256
              },
              "bio": {
                "description": "Biography/self-description of entity.",
                "type": "string",
                "maxLength": 256
              },
              "avatar_digest": {
                "description": "The attachment digest of the entity's avatar image.",
                "type": "string"
              },
              "website": {
                "description": "The entity's primary website.",
                "type": "string",
                "format": "uri"
              },
              "location": {
                "description": "The entity's physical location.",
                "type": "string",
                "maxLength": 256
              }
            }
          }
        }
      }
    },
    "error": {
      "name": "Error",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "error": {
          "description": "Short description of the error.",
          "type": "string",
          "require": true
        }
      }
    },
    "location": {
      "name": "Location",
      "description": "The Latitude/Longitude Point from which the instance originated. Number format: `[ \"-\" ] 1*DIGIT [ \".\" 1*DIGIT ]`",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "latitude": {
          "description": "The stringified floating point latitude.",
          "type": "string",
          "required": true
        },
        "longitude": {
          "description": "The stringified floating point longitude.",
          "type": "string",
          "required": true
        },
        "altitude": {
          "description": "The stringified floating point number of meters above sea level.",
          "type": "string",
          "required": false
        }
      }
    },
    "post_album": {
      "title": "Album",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "title": {
          "description": "The title of the album.",
          "type": "string",
          "required": true
        },
        "description": {
          "description": "The description of the album.",
          "type": "string",
          "required": false
        },
        "cover": {
          "description": "The cover photo of the album, this post must also be included in the `refs` array.",
          "required": false,
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "entity": {
              "description": "The publishing entity of the cover photo post.",
              "type": "string",
              "format": "uri"
            },
            "post": {
              "description": "The unique identfier of the cover photo post.",
              "type": "string",
              "required": true
            },
            "version": {
              "description": "The version identifier of the cover photo post.",
              "type": "string"
            }
          }
        }
      }
    },
    "post_app-auth": {
      "title": "App Auth",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "types": {
          "description": "List of authorized type uris.",
          "type": "object",
          "additionalProperties": false,
          "required": true,
          "properties": {
            "read": {
              "description": "List of type URIs authorized for reading.",
              "required": true,
              "type": "array",
              "items": {
                "type": "string",
                "format": "https://tent.io/formats/type-selector"
              }
            },
            "write": {
              "description": "List of type URIs authorized for reading and writing.",
              "type": "array",
              "required": true,
              "items": {
                "type": "string",
                "format": "https://tent.io/formats/type-selector"
              }
            }
          }
        },
        "scopes": {
          "description": "List of authorized scopes.",
          "type": "array",
          "required": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "post_app": {
      "title": "App",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the app.",
          "type": "string",
          "required": true
        },
        "description": {
          "description": "The description of the app.",
          "type": "string",
          "required": false
        },
        "url": {
          "description": "The URL for the website of the app.",
          "type": "string",
          "format": "uri",
          "required": true
        },
        "redirect_uri": {
          "description": "The URL that will be used as OAuth `redirect_uri`.",
          "type": "string",
          "format": "uri",
          "required": true
        },
        "notification_url": {
          "description": "The URL where post notifications will be delivered.",
          "type": "string",
          "format": "uri",
          "required": false
        },
        "notification_types": {
          "description": "The list of type URIs that the app wants to receive notifications about.",
          "type": "array",
          "required": false,
          "items": {
            "type": "string",
            "format": "https://tent.io/formats/type-selector"
          }
        },
        "types": {
          "description": "The list of type URIs that the app wants access to.",
          "type": "object",
          "required": false,
          "additionalProperties": false,
          "properties": {
            "read": {
              "description": "The list of type URIs that the app wants to read.",
              "type": "array",
              "required": false,
              "app_required": false,
              "items": {
                "type": "string",
                "format": "https://tent.io/formats/type-selector"
              }
            },
            "write": {
              "description": "The list of type URIs that the app wants to read and modify.",
              "type": "array",
              "required": false,
              "items": {
                "type": "string",
                "format": "https://tent.io/formats/type-selector"
              }
            }
          }
        },
        "scopes": {
          "description": "The list of requested scopes.",
          "required": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "post_credentials": {
      "title": "Credentials",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "hawk_key": {
          "description": "Hawk key identifier.",
          "type": "string",
          "required": true
        },
        "hawk_algorithm": {
          "description": "Hawk algorithm.",
          "type": "string",
          "required": true
        }
      }
    },
    "post_delivery-failure": {
      "title": "Delivery Failure",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "entity": {
          "description": "Entity uri of recipient",
          "type": "string",
          "format": "uri",
          "required": true,
          "app_required": true
        },
        "status": {
          "description": "Intent of delivering server to retry or not. Must be set to `permanent` or `temporary`.",
          "type": "string",
          "required": true,
          "app_required": true
        },
        "reason": {
          "description": "Reason for failure. Must be set to one of `unreachable`, `discovery_failed`, `relationship_failed`, or `delivery_failed`.",
          "type": "string"
        }
      }
    },
    "post_essay": {
      "title": "Essay",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "title": {
          "description": "The title of the post.",
          "type": "string",
          "required": false
        },
        "excerpt": {
          "description": "An excerpt of the post in HTML format to be displayed when the whole post is not available.",
          "type": "string",
          "required": false
        },
        "body": {
          "description": "The body of the post in HTML format. Renderers may sanitize some HTML.",
          "type": "string",
          "required": true
        }
      }
    },
    "post_favorite": {
      "title": "Favorite",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "note": {
          "description": "Text describing the favorite.",
          "type": "string",
          "required": false
        }
      }
    },
    "post_group-member": {
      "title": "Group Member",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "entity": {
          "description": "The entity that is a member of the mentioned group.",
          "type": "string",
          "required": true
        }
      }
    },
    "post_group": {
      "title": "Group",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "Name of group.",
          "type": "string",
          "required": true
        },
        "description": {
          "description": "Description of group.",
          "type": "string",
          "required": false
        }
      }
    },
    "post_meta": {
      "title": "Meta",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "entity": {
          "description": "The URI of the entity that the meta post describes.",
          "type": "string",
          "format": "uri",
          "required": true
        },
        "previous_entities": {
          "description": "Previous URIs used to identify the entity.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "profile": {
          "description": "Public information about the entity.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "description": "The entity's name or pseudonym.",
              "type": "string",
              "maxLength": 256
            },
            "bio": {
              "description": "Biography/self-description of entity.",
              "type": "string",
              "maxLength": 256
            },
            "website": {
              "description": "The entity's primary website.",
              "type": "string",
              "format": "uri"
            },
            "location": {
              "description": "The entity's physical location.",
              "type": "string",
              "maxLength": 256
            }
          }
        },
        "servers": {
          "description": "The servers that represent the entity.",
          "type": "array",
          "required": true,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "version": {
                "description": "The Tent version that the server supports.",
                "type": "string",
                "required": true
              },
              "preference": {
                "description": "Indicates the preference to be used when choosing a server to contact. `0` is the most preferred.",
                "type": "integer",
                "required": true
              },
              "urls": {
                "description": "The URLs for this server's Tent API endpoints.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "oauth_auth": {
                    "description": "The endpoint for the OAuth 2.0 Authorization Request.",
                    "type": "string",
                    "format": "uri-template",
                    "required": true
                  },
                  "oauth_token": {
                    "description": "The endpoint for the OAuth 2.0 Token Request.",
                    "type": "string",
                    "format": "uri-template",
                    "required": true
                  },
                  "posts_feed": {
                    "description": "The endpoint that serves lists of posts.",
                    "type": "string",
                    "format": "uri-template",
                    "required": true
                  },
                  "new_post": {
                    "description": "The endpoint used to create new posts that don't have an identifier assigned.",
                    "type": "string",
                    "format": "uri-template",
                    "required": true
                  },
                  "post": {
                    "description": "The endpoint used to retrieve and update a single post. The `{entity}` and `{post}` variables must be replaced with the URL parameter encoded entity URL and post identifier respectively.",
                    "type": "string",
                    "format": "uri-template",
                    "required": true
                  },
                  "post_attachment": {
                    "description": "The endpoint that redirects to an `attachment` URL, used to download an attachment when the digest is unspecified.  The `{entity}`, `{post}`, and `{name}` variables must be replaced with the URL-encoded publishing entity URL, post identifier, and attachment name respectively.",
                    "type": "string",
                    "format": "uri-template",
                    "required": true
                  },
                  "attachment": {
                    "description": "The endpoint used to retrieve an attachment given a hex-encoded digest. The `{entity}` and `{digest}` variables must be replaced with the URL-encoded publishing entity URL and attachment digest respectively.",
                    "type": "string",
                    "format": "uri-template",
                    "required": true
                  },
                  "batch": {
                    "description": "The endpoint used to make batch requests to the server.",
                    "type": "string",
                    "format": "uri-template",
                    "required": true
                  },
                  "server_info": {
                    "description": "The endpoint where metadata specific to the server is available.",
                    "type": "string",
                    "format": "uri-template",
                    "required": true
                  },
                  "discover": {
                    "description": "The endpoint that performs discovery on any given entity. The `{entity}` varible must be replaced with the URL-encoded entity to perform discovery on.",
                    "type": "string",
                    "format": "uri-template",
                    "required": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "post_photo": {
      "title": "Photo",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "location": {
          "$ref": "#/schemas/location"
        },
        "caption": {
          "description": "A caption that describes the photo.",
          "type": "string"
        },
        "artist": {
          "description": "The artist who created the image.",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the artist.",
              "type": "string"
            },
            "entity": {
              "description": "The entity URL of the artist.",
              "type": "string",
              "format": "uri"
            }
          }
        },
        "filename": {
          "description": "The name of the original file.",
          "type": "string"
        },
        "film_speed": {
          "description": "The exposure index of digital photos or the ASA rating of film speed.",
          "type": "string"
        },
        "focal_length": {
          "description": "The focal length of the system in millimeters as a stringified floating point number.",
          "type": "string",
          "format": "https://tent.io/formats/number-string"
        },
        "exposure": {
          "description": "Details about the photo exposure.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "bias": {
              "description": "The exposure bias in APEX units as a stringified floating point number.",
              "type": "string",
              "format": "https://tent.io/formats/number-string"
            },
            "mode": {
              "description": "The exposure mode. One of `auto`, `manual`, `bracket`.",
              "type": "string"
            },
            "time": {
              "description": "The number of seconds the shutter was open for as a stringified floating point number.",
              "type": "string",
              "format": "https://tent.io/formats/number-string"
            },
            "program": {
              "description": "The class of program used to set the exposure. One of `manual`, `program`, `aperture`, `shutter`, `creative`, `action`, `portrait`, `landscape`, `bulb`.",
              "type": "string"
            }
          }
        },
        "aperture": {
          "description": "The f-number (ratio of focal length to effective aperture diameter) as a stringified floating point number.",
          "type": "string",
          "format": "https://tent.io/formats/number-string"
        },
        "flash": {
          "description": "The flash firing details.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "fired": {
              "description": "Indicates whether the flash fired.",
              "type": "boolean"
            },
            "mode": {
              "description": "The flash mode. One of `firing`, `suppression`, `auto`.",
              "type": "string"
            }
          }
        },
        "white_balance": {
          "description": "Indicates the white balance mode. `true` is auto, `false` is manual.",
          "type": "boolean"
        },
        "metering_mode": {
          "description": "The metering mode. One of `Average`, `CenterWeightedAverage`, `Spot`, `MultiSpot`, `Pattern`, `Partial`, `other`.",
          "type": "string"
        },
        "camera": {
          "description": "Camera details.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "make": {
              "description": "The manufacturer of the camera.",
              "type": "string"
            },
            "model": {
              "description": "The model identifier of the camera.",
              "type": "string"
            }
          }
        },
        "lens": {
          "description": "Lens details.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "make": {
              "description": "The manufacturer of the lens.",
              "type": "string"
            },
            "model": {
              "description": "The model identifier of the lens.",
              "type": "string"
            },
            "focal_length": {
              "description": "The focal range.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "min": {
                  "description": "The minimum focal length in millimeters as a stringified floating point number.",
                  "type": "string",
                  "format": "https://tent.io/formats/number-string"
                },
                "max": {
                  "description": "The maximum focal length in millimeters as a stringified floating point number.",
                  "type": "string",
                  "format": "https://tent.io/formats/number-string"
                }
              }
            },
            "aperture": {
              "description": "The aperture range.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "min": {
                  "description": "The minimum f-number as a stringified floating point number.",
                  "type": "string",
                  "format": "https://tent.io/formats/number-string"
                },
                "max": {
                  "description": "The maximum f-number as a stringified floating point number.",
                  "type": "string",
                  "format": "https://tent.io/formats/number-string"
                }
              }
            }
          }
        },
        "resolution": {
          "description": "The resolution of the photo.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "width": {
              "description": "The width resolution in dots per inch.",
              "type": "integer",
              "required": true
            },
            "height": {
              "description": "The height resolution in dots per inch.",
              "type": "integer",
              "required": true
            }
          }
        },
        "dimensions": {
          "description": "The dimensions of the photo.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "width": {
              "description": "The width in pixels.",
              "type": "integer",
              "required": true
            },
            "height": {
              "description": "The height in pixels.",
              "type": "integer",
              "required": true
            }
          }
        },
        "timestamp": {
          "description": "The date/time when the image was taken in milliseconds since the Unix epoch.",
          "type": "integer"
        },
        "orientation": {
          "description": "The orientation of the photo. One of `horizontal`, `mirror_horizontal`, `mirror_vertical`, `90`, `180`, `270`, `mirror+90`, `mirror+270`",
          "type": "string"
        }
      }
    },
    "post_relationship": {
      "title": "Relationship",
      "type": "object",
      "additionalProperties": false
    },
    "post_status": {
      "title": "Status",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "text": {
          "description": "The status text.",
          "type": "string",
          "maxLength": 512,
          "required": true
        },
        "location": {
          "$ref": "#/schemas/location"
        }
      }
    },
    "post_subscription": {
      "title": "Subscription",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "Subscribed type.",
          "type": "string",
          "required": true,
          "format": "https://tent.io/formats/type-selector"
        }
      }
    },
    "post_tag": {
      "title": "Tag",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "Name of tag.",
          "type": "string",
          "required": true
        },
        "description": {
          "description": "Description of tag.",
          "type": "string",
          "required": false
        }
      }
    },
    "post": {
      "title": "Post",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "The unique identifier of the post.",
          "type": "string",
          "required": true,
          "app_required": "import"
        },
        "entity": {
          "description": "The entity that published the post.",
          "type": "string",
          "format": "uri",
          "required": true,
          "app_required": "import"
        },
        "original_entity": {
          "description": "Original entity of post. Only present if entity moved.",
          "type": "string",
          "format": "uri",
          "app_required": "import"
        },
        "published_at": {
          "description": "The date/time when the post was published in milliseconds since Unix epoch.",
          "type": "integer",
          "required": true,
          "app_required": false
        },
        "received_at": {
          "description": "The date/time when the post was received from the publishing server in milliseconds since Unix epoch.",
          "type": "integer",
          "app_required": "import"
        },
        "version": {
          "description": "Post Version object.",
          "type": "object",
          "required": true,
          "app_required": false,
          "additionalProperties": false,
          "properties": {
            "id": {
              "description": "Post version identifier.",
              "type": "string",
              "required": true,
              "app_required": "import"
            },
            "published_at": {
              "description": "The date/time when post version was published in milliseconds since Unix epoch.",
              "type": "integer",
              "required": true,
              "app_required": false
            },
            "received_at": {
              "description": "The date/time when the post version was received from the publishing server in milliseconds since Unix epoch.",
              "type": "integer",
              "app_required": "import"
            },
            "parents": {
              "description": "Parent versions.",
              "type": "array",
              "required": false,
              "app_required": false,
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "version": {
                    "description": "Post version identifier.",
                    "type": "string",
                    "required": true,
                    "app_required": true
                  },
                  "entity": {
                    "description": "Entity of parent post. Should only be present if different from the containing post entity.",
                    "type": "string",
                    "format": "uri",
                    "required": false,
                    "app_required": false
                  },
                  "original_entity": {
                    "description": "Original entity of parent post. Should only be present if the value of entity changed.",
                    "type": "string",
                    "format": "uri",
                    "required": false,
                    "app_required": "import"
                  },
                  "post": {
                    "description": "Identifier of parent post. Should only be present if different from the containing post identifier.",
                    "type": "string",
                    "required": false,
                    "app_required": false
                  }
                }
              }
            },
            "message": {
              "description": "Optional message describing changes made.",
              "type": "string",
              "required": false,
              "app_required": false
            }
          }
        },
        "mentions": {
          "description": "The entities and posts that this post mentions.",
          "type": "array",
          "required": false,
          "app_required": false,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "entity": {
                "description": "The entity that is being mentioned.",
                "type": "string",
                "format": "uri"
              },
              "original_entity": {
                "description": "The original entity that is being mentioned. Only present if the entity changed.",
                "type": "string",
                "format": "uri",
                "app_required": "import"
              },
              "post": {
                "description": "The unique identifier of the mentioned post.",
                "type": "string"
              },
              "version": {
                "description": "The version identifier of the mentioned post.",
                "type": "string"
              },
              "type": {
                "description": "Type URI of referenced post. Should be set unless the mentioned post is private and the mention is public.",
                "type": "string"
              },
              "public": {
                "description": "Indicates whether mention is public or private. Default is `true`.",
                "type": "boolean"
              }
            }
          }
        },
        "refs": {
          "description": "The posts that this post references.",
          "type": "array",
          "required": false,
          "app_required": false,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "entity": {
                "description": "The publishing entity of the referenced post.",
                "type": "string",
                "format": "uri"
              },
              "original_entity": {
                "description": "The original publishing entity of the referenced post. Only present if the entity changed.",
                "type": "string",
                "format": "uri",
                "app_required": "import"
              },
              "post": {
                "description": "The unique identfier of the referenced post.",
                "type": "string",
                "required": true,
                "app_required": true
              },
              "version": {
                "description": "The version identifier of the referenced post.",
                "type": "string"
              },
              "type": {
                "description": "Type URI of referenced post. Should be set unless the referenced post is private.",
                "type": "string"
              }
            }
          }
        },
        "licenses": {
          "description": "The licenses that the post is released under.",
          "type": "array",
          "required": false,
          "app_required": false,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "description": "URL of the license.",
                "type": "string",
                "format": "uri",
                "required": true,
                "app_required": true
              }
            }
          }
        },
        "type": {
          "description": "The post type URI.",
          "type": "string",
          "format": "uri",
          "required": true,
          "app_required": true
        },
        "content": {
          "description": "The post content.",
          "type": "object",
          "required": false,
          "app_required": false
        },
        "attachments": {
          "description": "Attachments to the post.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "category": {
                "description": "The category of the attachment.",
                "type": "string",
                "required": true,
                "app_required": true
              },
              "content_type": {
                "description": "The media type of the attachment, in the same format as the `Content-Type` HTTP header.",
                "type": "string",
                "required": true,
                "app_required": true
              },
              "name": {
                "description": "The name of the attachment. The name and media type combination must be unique to the post version.",
                "type": "string",
                "required": true,
                "app_required": true
              },
              "digest": {
                "description": "Hex-encoded first 256 bits of the SHA-512 hash of the attachment.",
                "type": "string",
                "required": true,
                "app_required": "import"
              },
              "size": {
                "description": "The size in bytes of the attachment.",
                "type": "integer",
                "required": true,
                "app_required": "import"
              }
            }
          }
        },
        "app": {
          "description": "The application that published the post.",
          "type": "object",
          "additionalProperties": false,
          "app_required": "import",
          "properties": {
            "id": {
              "description": "Identifier of the post containing the details about the app that created this post.",
              "type": "string",
              "app_required": "import"
            },
            "name": {
              "description": "The human readable name of the application.",
              "type": "string",
              "app_required": "import"
            },
            "url": {
              "description": "The URL of the application.",
              "type": "string",
              "format": "uri",
              "app_required": "import"
            }
          }
        },
        "permissions": {
          "description": "The permissions that apply to the post. Should be omitted if public member is true.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "public": {
              "description": "Indicates whether the post is public, public posts have no access restrictions.",
              "type": "boolean",
              "default": false,
              "required": true,
              "app_required": false
            },
            "groups": {
              "description": "The groups that are permitted to see the post.",
              "type": "array",
              "required": false,
              "app_required": false,
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "post": {
                    "description": "Post identifier of the group.",
                    "type": "string",
                    "required": true,
                    "app_required": true
                  }
                }
              }
            },
            "entities": {
              "description": "The entities that are permitted to see the post.",
              "type": "array",
              "required": false,
              "app_required": false,
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      }
    }
  }
}